{% block json_widget %}
    <div id="{{ id }}_errors"></div>
    <div id="{{ id }}_json"></div>
    <script>
        var {{ id }}schema = {{ schema|raw }}
            window.editor{{ id }}startval = null

        function {{ id }}_load(value, schema) {
            var schema = (schema) ? schema :{{ schema|raw }};
            JSONEditor.defaults.options.theme = '{{ theme }}';
            if (value) {
                window.editor{{ id }}startval = value;
            }
            if (window.editor{{ id }}) {
                window.editor{{ id }}.destroy()
            }
            window.editor{{ id }} = new JSONEditor(document.getElementById("{{ id }}_json"), {
                schema: schema,
                disable_collapse: true,
                disable_properties: true,
                form_name_root: '{{ full_name }}',
                disable_edit_json: {{ disable_edit_json }},
                no_additional_properties: {{ no_additional_properties }},
                required_by_default: {{ required_by_default }},
                display_required_only: {{ display_required_only }}
            });
            if (value) {
                window.editor{{ id }}.setValue(value);
            } else {
                window.editor{{ id }}.setValue(window.editor{{ id }}startval);
            }
            window.editor{{ id }}.on("change", function () {
                var errors = window.editor{{ id }}.validate();
                $('#{{ id }}_errors').html("");
                if (errors.length) {
                    console.error("Invalid JsonSchema (see below)");
                    console.log(errors);
                }
            });
        };
        {{ id }}_load({{ value|json_encode()|raw }}, {{ id }}schema);
    </script>
{% endblock %}